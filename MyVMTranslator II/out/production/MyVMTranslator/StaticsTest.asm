@Func.Sys.init
0;JMP
// function Sys.init 0 
(Func.Sys.init)
// push constant 6 
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 8 
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
// call Class1.set 2 
@Return.Func.Class1.set0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Func.Class1.set
0;JMP
(Return.Func.Class1.set0)
// pop temp 0 
@SP
M=M-1
@5
D=A
@0
A=D+A
D=A
@R13
M=D
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 23 
@23
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 15 
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
// call Class2.set 2 
@Return.Func.Class2.set1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Func.Class2.set
0;JMP
(Return.Func.Class2.set1)
// pop temp 0 
@SP
M=M-1
@5
D=A
@0
A=D+A
D=A
@R13
M=D
@SP
A=M
D=M
@R13
A=M
M=D
// call Class1.get 0 
@Return.Func.Class1.get2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Func.Class1.get
0;JMP
(Return.Func.Class1.get2)
// call Class2.get 0 
@Return.Func.Class2.get3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Func.Class2.get
0;JMP
(Return.Func.Class2.get3)
// label WHILE 
(GGLS_WHILE)
// goto WHILE 
@GGLS_WHILE
0;JMP
// function Class1.set 0 
(Func.Class1.set)
// push argument 0 
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 0 
@SP
M=M-1
A=M
D=M
@rc.StaticsTest0
M=D
// push argument 1 
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 1 
@SP
M=M-1
A=M
D=M
@rc.StaticsTest1
M=D
// push constant 0 
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return 
@LCL
D=M
@endFrame
M=D
@endFrame
D=M
@5
A=D-A
D=M
@retAddr
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M
@1
D=D+A
@SP
M=D
@endFrame
D=M
@1
A=D-A
D=M
@THAT
M=D
@endFrame
D=M
@2
A=D-A
D=M
@THIS
M=D
@endFrame
D=M
@3
A=D-A
D=M
@ARG
M=D
@endFrame
D=M
@4
A=D-A
D=M
@LCL
M=D
@retAddr
A=M
0;JMP
// function Class1.get 0 
(Func.Class1.get)
// push static 0 
@rc/StaticsTest0
D=M
@SP
A=M
M=D
@SP
M=M+1
// push static 1 
@rc/StaticsTest1
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub 
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// return 
@LCL
D=M
@endFrame
M=D
@endFrame
D=M
@5
A=D-A
D=M
@retAddr
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M
@1
D=D+A
@SP
M=D
@endFrame
D=M
@1
A=D-A
D=M
@THAT
M=D
@endFrame
D=M
@2
A=D-A
D=M
@THIS
M=D
@endFrame
D=M
@3
A=D-A
D=M
@ARG
M=D
@endFrame
D=M
@4
A=D-A
D=M
@LCL
M=D
@retAddr
A=M
0;JMP
// function Class2.set 0 
(Func.Class2.set)
// push argument 0 
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 0 
@SP
M=M-1
A=M
D=M
@rc.StaticsTest0
M=D
// push argument 1 
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 1 
@SP
M=M-1
A=M
D=M
@rc.StaticsTest1
M=D
// push constant 0 
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return 
@LCL
D=M
@endFrame
M=D
@endFrame
D=M
@5
A=D-A
D=M
@retAddr
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M
@1
D=D+A
@SP
M=D
@endFrame
D=M
@1
A=D-A
D=M
@THAT
M=D
@endFrame
D=M
@2
A=D-A
D=M
@THIS
M=D
@endFrame
D=M
@3
A=D-A
D=M
@ARG
M=D
@endFrame
D=M
@4
A=D-A
D=M
@LCL
M=D
@retAddr
A=M
0;JMP
// function Class2.get 0 
(Func.Class2.get)
// push static 0 
@rc/StaticsTest0
D=M
@SP
A=M
M=D
@SP
M=M+1
// push static 1 
@rc/StaticsTest1
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub 
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// return 
@LCL
D=M
@endFrame
M=D
@endFrame
D=M
@5
A=D-A
D=M
@retAddr
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M
@1
D=D+A
@SP
M=D
@endFrame
D=M
@1
A=D-A
D=M
@THAT
M=D
@endFrame
D=M
@2
A=D-A
D=M
@THIS
M=D
@endFrame
D=M
@3
A=D-A
D=M
@ARG
M=D
@endFrame
D=M
@4
A=D-A
D=M
@LCL
M=D
@retAddr
A=M
0;JMP
